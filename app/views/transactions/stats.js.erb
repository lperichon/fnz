$('#transaction-stats-modal').modal({
    keyboard: false
});

debitsChart = new Highcharts.Chart({
    chart: {
        renderTo: 'debits_chart',
        plotBackgroundColor: null,
        plotBorderWidth: null,
        plotShadow: false
    },
    title: {
        text: "Debits: <%= @debits.inject({}) {|c,(k,v)| c.merge({k.split('-')[1] => (c[k.split('-')[1]] || 0) + v})}.map {|currency, sum| Currency.find(currency).symbol + sum.to_s }.join(' - ') %>"
    },
    tooltip: {
        pointFormat: '<b>{point.y}</b>',
        valueDecimals: 2,
        valuePrefix: '$'
    },
    plotOptions: {
        pie: {
            allowPointSelect: true,
            cursor: 'pointer',
            dataLabels: {
                enabled: true,
                color: '#000000',
                connectorColor: '#000000',
                formatter: function() {
                    return '<b>'+ this.point.name +'</b>: $'+ this.y;
                }
            }
        }
    },
    series: [{
        type: 'pie',
        name: 'Debits',
        data: [
            <% @debits.each do |tag, sum| %>
              ['<%= tag %>', <%= sum.to_f.round(2) %>],
            <% end %>
            <%if @untagged_debits > 0 %>
              ['Untagged', <%= @untagged_debits.to_f.round(2) %>],
            <% end %>
        ],
        point: {
            events: {
                click: function () {
                    console.log(this);
                    //$.post('/get/data/url/' + this.id, function(data) {
                        // you may need to format your data here
                        // Set the level here. e.g Level 1, 2 or 3 and then depending on that you can also change the url also or any other logic
                    //    chart.series[0].setData(data);
                    //});
                }
            }
        }
    }]
});


creditsChart = new Highcharts.Chart({
    chart: {
        renderTo: 'credits_chart',
        plotBackgroundColor: null,
        plotBorderWidth: null,
        plotShadow: false
    },
    title: {
        text: "Credits: $<%= @credits.inject({}) {|c,(k,v)| c.merge({k.split('-')[1] => (c[k.split('-')[1]] || 0) + v})}.map {|currency, sum| Currency.find(currency).symbol + sum.to_s }.join(' - ') %>"
    },
    tooltip: {
        pointFormat: '<b>{point.y}</b>',
        valueDecimals: 2,
        valuePrefix: '$'
    },
    plotOptions: {
        pie: {
            allowPointSelect: true,
            cursor: 'pointer',
            dataLabels: {
                enabled: true,
                color: '#000000',
                connectorColor: '#000000',
                formatter: function() {
                    return '<b>'+ this.point.name +'</b>: $'+ this.y;
                }
            }
        }
    },
    series: [{
        type: 'pie',
        name: 'Credits',
        data: [
            <% @credits.each do |tag, sum| %>
            ['<%= tag %>', <%= sum.to_f.round(2) %>],
            <% end %>
            <%if @untagged_credits > 0 %>
            ['Untagged', <%= @untagged_credits.to_f.round(2) %>],
            <% end %>
        ]
    }]
});
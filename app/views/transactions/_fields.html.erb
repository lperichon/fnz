<%= f.input :type,
            collection: [[Debit.model_name.human, "Debit"], [Credit.model_name.human, "Credit"], [Transfer.model_name.human, "Transfer"]],
            as: :radio_buttons,
            item_wrapper_class: 'inline',
            input_html: {
              data: {
                target: "transaction_form.transactionTypeOption",
                action: "change->transaction_form#updateFormFields change->transaction_form#updateColor"
              }
            } %>

<%= f.input :description %>

<div class="control-group" data-controller="calculator">
  <label class="control-label"><%= _("Valor") %></label>
  <div class="controls">
    <input type="text" data-target="calculator.formula"
                       data-action="keyup@window->calculator#calculateResult"
                       class="calculatorFormula"
                       ></input> 
    =
    <input type="text" data-target="calculator.result" class="calculatorResult" disabled></input> 
    <%= f.input :amount, as: :hidden, input_html: { data: { target: "calculator.result calculator.initialValue" }} %>
  </div>
</div>

<%= f.association :source, :collection => @business.accounts.order("name"), :prompt => t('transactions.fields.source_prompt') %>

<span class="transfer_field" style="display:none;" data-target="transaction_form.transferField">
  <%= f.input :target_id, :as => :select, :collection => @business.accounts.order("name"), :prompt => t('transactions.fields.target_prompt') %>
</span>

<div class="control-group controls">
  <a href="#" data-action="transaction_form#toggleExtraOptions">
  <span data-target="transaction_form.toggleButtonVerb" data-show-msg="<%= _("mostrar") %>" data-hide-msg="<%= _("ocultar") %>"></span> 
    <%= _("mÃ¡s opciones") %>
  </a>
</div>

<div data-target="transaction_form.extraFieldsContainer">

  <%= f.input :transaction_at, :as => :date_time_picker %>

  <span class="transfer_field" style="display:none;" data-target="transaction_form.transferField">
    <%= f.input :conversion_rate %>
  </span>

  <%= f.input :state,
              as: :select,
              collection: Transaction.available_states.map{|s| [t(".state_options.#{s}"),s]},
              input_html: { data: { target: "transaction_form.stateField",
                                    action: "transaction_form#updateFormFields" } } %>

  <span class="pending_field" style="display:none;">
    <%= f.input :reconciled_at, :as => :date_time_picker %>
  </span>

  <%= f.input :report_at, as: :date, discard_day: true %>

  <%# Chosen no me muestra el blank si no lo agrego a la colecciÃ³n %>
  <%=  f.input :tag_ids, as: :select, collection: [['-',nil]]+@business.tags.map { |t| [t.name, t.id] }, input_html:{class: "chosen", 'data-placeholder' => t('transactions.fields.tags_placeholder')} %>

  <%=  f.input :agent_id, :as => :select, :collection => @business.agents.enabled, :input_html => {:class => "chosen", 'data-placeholder' => t('transactions.fields.agent_placeholder')} %>

  <%=  f.input :contact_id, :as => :select, :collection => @business.contacts, :input_html => {:class => "chosen", 'data-placeholder' => t('transactions.fields.contact_placeholder')} %>
</div>
